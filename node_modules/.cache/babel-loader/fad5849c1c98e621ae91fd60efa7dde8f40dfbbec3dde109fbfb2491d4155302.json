{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useNavigate}from'react-router-dom';import{Box,AppBar,Toolbar,Typography,IconButton,Drawer,List,ListItem,ListItemText,ListItemAvatar,Avatar,TextField,Button,Badge,Paper,Divider,Menu,MenuItem,Dialog,DialogTitle,DialogContent,DialogActions,Select,FormControl,InputLabel}from'@mui/material';import{Menu as MenuIcon,Send as SendIcon,Person as PersonIcon,ExitToApp as LogoutIcon,Code as CodeIcon,EmojiEmotions as EmojiIcon,Chat as ChatIcon}from'@mui/icons-material';import{useAuth}from'../../context/AuthContext';import EmojiPicker from'emoji-picker-react';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{vscDarkPlus}from'react-syntax-highlighter/dist/esm/styles/prism';import io from'socket.io-client';import'./Chat.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=()=>{const navigate=useNavigate();const{user,logout}=useAuth();const[drawerOpen,setDrawerOpen]=useState(false);const[friendRequests,setFriendRequests]=useState([]);const[friends,setFriends]=useState([]);const[selectedFriend,setSelectedFriend]=useState(null);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[showEmojiPicker,setShowEmojiPicker]=useState(false);const[showCodeDialog,setShowCodeDialog]=useState(false);const[codeSnippet,setCodeSnippet]=useState('');const[codeLanguage,setCodeLanguage]=useState('javascript');const[typing,setTyping]=useState(false);const[anchorEl,setAnchorEl]=useState(null);const socketRef=useRef();const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);useEffect(()=>{// Connect to Socket.IO server\nsocketRef.current=io(process.env.REACT_APP_SOCKET_URL||'http://localhost:5000');socketRef.current.on('connect',()=>{console.log('Connected to server');socketRef.current.emit('user_connected',user.userId);});socketRef.current.on('typing',data=>{if(data.userId===(selectedFriend===null||selectedFriend===void 0?void 0:selectedFriend.userId)){setTyping(data.isTyping);}});socketRef.current.on('receive_message',data=>{if(data.senderId===(selectedFriend===null||selectedFriend===void 0?void 0:selectedFriend.userId)){setMessages(prev=>[...prev,data]);}});return()=>{socketRef.current.disconnect();};},[user.userId,selectedFriend]);useEffect(()=>{// Fetch friend requests and friends list\nconst fetchData=async()=>{try{const[requestsRes,friendsRes]=await Promise.all([fetch(`${process.env.REACT_APP_API_URL||'http://localhost:5000'}/api/users/friend-requests`),fetch(`${process.env.REACT_APP_API_URL||'http://localhost:5000'}/api/users/friends`)]);const requests=await requestsRes.json();const friendsList=await friendsRes.json();setFriendRequests(requests);setFriends(friendsList);}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);const handleSendMessage=()=>{if(!newMessage.trim()||!selectedFriend)return;const messageData={recipientId:selectedFriend.userId,senderId:user.userId,message:newMessage,timestamp:new Date()};socketRef.current.emit('send_message',messageData);setMessages(prev=>[...prev,messageData]);setNewMessage('');};const handleSendCode=()=>{if(!codeSnippet.trim()||!selectedFriend)return;const messageData={recipientId:selectedFriend.userId,senderId:user.userId,message:codeSnippet,type:'code',language:codeLanguage,timestamp:new Date()};socketRef.current.emit('send_message',messageData);setMessages(prev=>[...prev,messageData]);setCodeSnippet('');setShowCodeDialog(false);};const handleTyping=()=>{if(!selectedFriend)return;socketRef.current.emit('typing',{recipientId:selectedFriend.userId,userId:user.userId,isTyping:true});// Clear typing indicator after 2 seconds\nsetTimeout(()=>{socketRef.current.emit('typing',{recipientId:selectedFriend.userId,userId:user.userId,isTyping:false});},2000);};const handleAcceptFriendRequest=async requestId=>{try{await fetch(`${process.env.REACT_APP_API_URL||'http://localhost:5000'}/api/users/friend-request/accept/${requestId}`,{method:'POST'});// Refresh friends list\nconst friendsRes=await fetch(`${process.env.REACT_APP_API_URL||'http://localhost:5000'}/api/users/friends`);const friendsList=await friendsRes.json();setFriends(friendsList);// Remove accepted request\nsetFriendRequests(prev=>prev.filter(request=>request._id!==requestId));}catch(error){console.error('Error accepting friend request:',error);}};const handleRejectFriendRequest=async requestId=>{try{await fetch(`${process.env.REACT_APP_API_URL||'http://localhost:5000'}/api/users/friend-request/reject/${requestId}`,{method:'POST'});// Remove rejected request\nsetFriendRequests(prev=>prev.filter(request=>request._id!==requestId));}catch(error){console.error('Error rejecting friend request:',error);}};const handleSendFriendRequest=async userId=>{try{await fetch(`${process.env.REACT_APP_API_URL||'http://localhost:5000'}/api/users/friend-request/${userId}`,{method:'POST'});}catch(error){console.error('Error sending friend request:',error);}};const handleLogout=()=>{logout();navigate('/login');};const handleEmojiClick=(event,emojiObject)=>{setNewMessage(prev=>prev+emojiObject.emoji);setShowEmojiPicker(false);};return/*#__PURE__*/_jsxs(Box,{className:\"chat-container\",children:[/*#__PURE__*/_jsx(AppBar,{position:\"fixed\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",edge:\"start\",onClick:()=>setDrawerOpen(true),sx:{mr:2},children:/*#__PURE__*/_jsx(MenuIcon,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",sx:{flexGrow:1},children:\"Miki Chat\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",sx:{mr:2},children:[user.name,\" (ID: \",user.userId,\")\"]}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:e=>setAnchorEl(e.currentTarget),children:/*#__PURE__*/_jsx(PersonIcon,{})})]})}),/*#__PURE__*/_jsx(Menu,{anchorEl:anchorEl,open:Boolean(anchorEl),onClose:()=>setAnchorEl(null),className:\"chat-menu\",children:/*#__PURE__*/_jsxs(MenuItem,{onClick:handleLogout,className:\"chat-menu-item chat-logout-button\",children:[/*#__PURE__*/_jsx(LogoutIcon,{className:\"chat-menu-icon\"}),\"Logout\"]})}),/*#__PURE__*/_jsx(Drawer,{anchor:\"left\",open:drawerOpen,onClose:()=>setDrawerOpen(false),children:/*#__PURE__*/_jsxs(Box,{className:\"chat-sidebar\",children:[/*#__PURE__*/_jsxs(Box,{className:\"chat-friend-requests\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Friend Requests\"}),friendRequests.length===0?/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"No pending friend requests\"}):friendRequests.map(request=>/*#__PURE__*/_jsxs(Paper,{className:\"chat-friend-request-item\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[request.from.name,\" (ID: \",request.from.userId,\")\"]}),/*#__PURE__*/_jsxs(Box,{className:\"chat-friend-request-actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",size:\"small\",onClick:()=>handleAcceptFriendRequest(request._id),children:\"Accept\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"error\",size:\"small\",onClick:()=>handleRejectFriendRequest(request._id),children:\"Reject\"})]})]},request._id))]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Box,{className:\"chat-friends-list\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{p:2},children:\"Friends\"}),friends.length===0?/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{p:2},children:\"No friends yet\"}):friends.map(friend=>/*#__PURE__*/_jsxs(ListItem,{className:`chat-friend-item ${(selectedFriend===null||selectedFriend===void 0?void 0:selectedFriend._id)===friend._id?'active':''}`,onClick:()=>setSelectedFriend(friend),children:[/*#__PURE__*/_jsx(Avatar,{className:\"chat-friend-avatar\",children:friend.name.charAt(0)}),/*#__PURE__*/_jsxs(Box,{className:\"chat-friend-info\",children:[/*#__PURE__*/_jsx(Typography,{className:\"chat-friend-name\",children:friend.name}),/*#__PURE__*/_jsxs(Typography,{className:\"chat-friend-id\",children:[\"ID: \",friend.userId]})]})]},friend._id))]})]})}),/*#__PURE__*/_jsx(Box,{className:\"chat-main\",children:selectedFriend?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{className:\"chat-header\",children:/*#__PURE__*/_jsxs(Typography,{className:\"chat-header-title\",children:[selectedFriend.name,\" (ID: \",selectedFriend.userId,\")\"]})}),/*#__PURE__*/_jsxs(Box,{className:\"chat-messages\",children:[messages.map((message,index)=>/*#__PURE__*/_jsxs(Box,{className:`chat-message ${message.senderId===user.userId?'chat-message-sent':'chat-message-received'}`,children:[message.type==='code'?/*#__PURE__*/_jsx(Box,{className:\"chat-code-snippet\",children:/*#__PURE__*/_jsx(SyntaxHighlighter,{language:message.language,style:vscDarkPlus,customStyle:{margin:0},children:message.message})}):/*#__PURE__*/_jsx(Typography,{children:message.message}),/*#__PURE__*/_jsx(Typography,{className:\"chat-message-time\",children:new Date(message.timestamp).toLocaleTimeString()})]},index)),typing&&/*#__PURE__*/_jsxs(Typography,{className:\"chat-typing\",children:[selectedFriend.name,\" is typing...\"]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(Box,{className:\"chat-input\",children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>setShowEmojiPicker(!showEmojiPicker),children:/*#__PURE__*/_jsx(EmojiIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>setShowCodeDialog(true),children:/*#__PURE__*/_jsx(CodeIcon,{})}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:\"Type a message\",value:newMessage,onChange:e=>{setNewMessage(e.target.value);handleTyping();},onKeyPress:e=>{if(e.key==='Enter'){handleSendMessage();}},className:\"chat-input-field\"}),/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:handleSendMessage,disabled:!newMessage.trim(),children:/*#__PURE__*/_jsx(SendIcon,{})})]}),showEmojiPicker&&/*#__PURE__*/_jsx(Box,{className:\"chat-emoji-picker\",children:/*#__PURE__*/_jsx(EmojiPicker,{onEmojiClick:handleEmojiClick})})]}):/*#__PURE__*/_jsxs(Box,{className:\"chat-empty-state\",children:[/*#__PURE__*/_jsx(ChatIcon,{className:\"chat-empty-state-icon\"}),/*#__PURE__*/_jsx(Typography,{className:\"chat-empty-state-text\",children:\"Select a friend to start chatting\"})]})}),/*#__PURE__*/_jsxs(Dialog,{open:showCodeDialog,onClose:()=>setShowCodeDialog(false),maxWidth:\"md\",fullWidth:true,className:\"chat-code-dialog\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Send Code Snippet\"}),/*#__PURE__*/_jsxs(DialogContent,{className:\"chat-code-dialog-content\",children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,className:\"chat-code-language-select\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"language-select-label\",children:\"Language\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"language-select-label\",value:codeLanguage,label:\"Language\",onChange:e=>setCodeLanguage(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"javascript\",children:\"JavaScript\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"python\",children:\"Python\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"java\",children:\"Java\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"cpp\",children:\"C++\"})]})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,rows:10,label:\"Code\",value:codeSnippet,onChange:e=>setCodeSnippet(e.target.value),className:\"chat-code-textarea\"})]}),/*#__PURE__*/_jsxs(DialogActions,{className:\"chat-code-dialog-actions\",children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setShowCodeDialog(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSendCode,variant:\"contained\",disabled:!codeSnippet.trim(),children:\"Send\"})]})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Box","AppBar","Toolbar","Typography","IconButton","Drawer","List","ListItem","ListItemText","ListItemAvatar","Avatar","TextField","Button","Badge","Paper","Divider","Menu","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Select","FormControl","InputLabel","MenuIcon","Send","SendIcon","Person","PersonIcon","ExitToApp","LogoutIcon","Code","CodeIcon","EmojiEmotions","EmojiIcon","Chat","ChatIcon","useAuth","EmojiPicker","Prism","SyntaxHighlighter","vscDarkPlus","io","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","navigate","user","logout","drawerOpen","setDrawerOpen","friendRequests","setFriendRequests","friends","setFriends","selectedFriend","setSelectedFriend","messages","setMessages","newMessage","setNewMessage","showEmojiPicker","setShowEmojiPicker","showCodeDialog","setShowCodeDialog","codeSnippet","setCodeSnippet","codeLanguage","setCodeLanguage","typing","setTyping","anchorEl","setAnchorEl","socketRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","process","env","REACT_APP_SOCKET_URL","on","console","log","emit","userId","data","isTyping","senderId","prev","disconnect","fetchData","requestsRes","friendsRes","Promise","all","fetch","REACT_APP_API_URL","requests","json","friendsList","error","handleSendMessage","trim","messageData","recipientId","message","timestamp","Date","handleSendCode","type","language","handleTyping","setTimeout","handleAcceptFriendRequest","requestId","method","filter","request","_id","handleRejectFriendRequest","handleSendFriendRequest","handleLogout","handleEmojiClick","event","emojiObject","emoji","className","children","position","color","edge","onClick","sx","mr","variant","component","flexGrow","name","e","currentTarget","open","Boolean","onClose","anchor","mb","length","map","from","size","p","friend","charAt","index","style","customStyle","margin","toLocaleTimeString","ref","fullWidth","placeholder","value","onChange","target","onKeyPress","key","disabled","onEmojiClick","maxWidth","id","labelId","label","multiline","rows"],"sources":["B:/new roop/frontend/src/components/chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  TextField,\r\n  Button,\r\n  Badge,\r\n  Paper,\r\n  Divider,\r\n  Menu,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Select,\r\n  FormControl,\r\n  InputLabel\r\n} from '@mui/material';\r\nimport {\r\n  Menu as MenuIcon,\r\n  Send as SendIcon,\r\n  Person as PersonIcon,\r\n  ExitToApp as LogoutIcon,\r\n  Code as CodeIcon,\r\n  EmojiEmotions as EmojiIcon,\r\n  Chat as ChatIcon\r\n} from '@mui/icons-material';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n  const navigate = useNavigate();\r\n  const { user, logout } = useAuth();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [friendRequests, setFriendRequests] = useState([]);\r\n  const [friends, setFriends] = useState([]);\r\n  const [selectedFriend, setSelectedFriend] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [showCodeDialog, setShowCodeDialog] = useState(false);\r\n  const [codeSnippet, setCodeSnippet] = useState('');\r\n  const [codeLanguage, setCodeLanguage] = useState('javascript');\r\n  const [typing, setTyping] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const socketRef = useRef();\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Connect to Socket.IO server\r\n    socketRef.current = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000');\r\n\r\n    socketRef.current.on('connect', () => {\r\n      console.log('Connected to server');\r\n      socketRef.current.emit('user_connected', user.userId);\r\n    });\r\n\r\n    socketRef.current.on('typing', (data) => {\r\n      if (data.userId === selectedFriend?.userId) {\r\n        setTyping(data.isTyping);\r\n      }\r\n    });\r\n\r\n    socketRef.current.on('receive_message', (data) => {\r\n      if (data.senderId === selectedFriend?.userId) {\r\n        setMessages(prev => [...prev, data]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [user.userId, selectedFriend]);\r\n\r\n  useEffect(() => {\r\n    // Fetch friend requests and friends list\r\n    const fetchData = async () => {\r\n      try {\r\n        const [requestsRes, friendsRes] = await Promise.all([\r\n          fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/users/friend-requests`),\r\n          fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/users/friends`)\r\n        ]);\r\n\r\n        const requests = await requestsRes.json();\r\n        const friendsList = await friendsRes.json();\r\n\r\n        setFriendRequests(requests);\r\n        setFriends(friendsList);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!newMessage.trim() || !selectedFriend) return;\r\n\r\n    const messageData = {\r\n      recipientId: selectedFriend.userId,\r\n      senderId: user.userId,\r\n      message: newMessage,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    socketRef.current.emit('send_message', messageData);\r\n    setMessages(prev => [...prev, messageData]);\r\n    setNewMessage('');\r\n  };\r\n\r\n  const handleSendCode = () => {\r\n    if (!codeSnippet.trim() || !selectedFriend) return;\r\n\r\n    const messageData = {\r\n      recipientId: selectedFriend.userId,\r\n      senderId: user.userId,\r\n      message: codeSnippet,\r\n      type: 'code',\r\n      language: codeLanguage,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    socketRef.current.emit('send_message', messageData);\r\n    setMessages(prev => [...prev, messageData]);\r\n    setCodeSnippet('');\r\n    setShowCodeDialog(false);\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    if (!selectedFriend) return;\r\n\r\n    socketRef.current.emit('typing', {\r\n      recipientId: selectedFriend.userId,\r\n      userId: user.userId,\r\n      isTyping: true\r\n    });\r\n\r\n    // Clear typing indicator after 2 seconds\r\n    setTimeout(() => {\r\n      socketRef.current.emit('typing', {\r\n        recipientId: selectedFriend.userId,\r\n        userId: user.userId,\r\n        isTyping: false\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  const handleAcceptFriendRequest = async (requestId) => {\r\n    try {\r\n      await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/users/friend-request/accept/${requestId}`, {\r\n        method: 'POST'\r\n      });\r\n\r\n      // Refresh friends list\r\n      const friendsRes = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/users/friends`);\r\n      const friendsList = await friendsRes.json();\r\n      setFriends(friendsList);\r\n\r\n      // Remove accepted request\r\n      setFriendRequests(prev => prev.filter(request => request._id !== requestId));\r\n    } catch (error) {\r\n      console.error('Error accepting friend request:', error);\r\n    }\r\n  };\r\n\r\n  const handleRejectFriendRequest = async (requestId) => {\r\n    try {\r\n      await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/users/friend-request/reject/${requestId}`, {\r\n        method: 'POST'\r\n      });\r\n\r\n      // Remove rejected request\r\n      setFriendRequests(prev => prev.filter(request => request._id !== requestId));\r\n    } catch (error) {\r\n      console.error('Error rejecting friend request:', error);\r\n    }\r\n  };\r\n\r\n  const handleSendFriendRequest = async (userId) => {\r\n    try {\r\n      await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/users/friend-request/${userId}`, {\r\n        method: 'POST'\r\n      });\r\n    } catch (error) {\r\n      console.error('Error sending friend request:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleEmojiClick = (event, emojiObject) => {\r\n    setNewMessage(prev => prev + emojiObject.emoji);\r\n    setShowEmojiPicker(false);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"chat-container\">\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            edge=\"start\"\r\n            onClick={() => setDrawerOpen(true)}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Miki Chat\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" sx={{ mr: 2 }}>\r\n            {user.name} (ID: {user.userId})\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n            <PersonIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n        className=\"chat-menu\"\r\n      >\r\n        <MenuItem onClick={handleLogout} className=\"chat-menu-item chat-logout-button\">\r\n          <LogoutIcon className=\"chat-menu-icon\" />\r\n          Logout\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={drawerOpen}\r\n        onClose={() => setDrawerOpen(false)}\r\n      >\r\n        <Box className=\"chat-sidebar\">\r\n          <Box className=\"chat-friend-requests\">\r\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n              Friend Requests\r\n            </Typography>\r\n            {friendRequests.length === 0 ? (\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                No pending friend requests\r\n              </Typography>\r\n            ) : (\r\n              friendRequests.map((request) => (\r\n                <Paper key={request._id} className=\"chat-friend-request-item\">\r\n                  <Typography variant=\"subtitle1\">\r\n                    {request.from.name} (ID: {request.from.userId})\r\n                  </Typography>\r\n                  <Box className=\"chat-friend-request-actions\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      onClick={() => handleAcceptFriendRequest(request._id)}\r\n                    >\r\n                      Accept\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"error\"\r\n                      size=\"small\"\r\n                      onClick={() => handleRejectFriendRequest(request._id)}\r\n                    >\r\n                      Reject\r\n                    </Button>\r\n                  </Box>\r\n                </Paper>\r\n              ))\r\n            )}\r\n          </Box>\r\n          <Divider />\r\n          <Box className=\"chat-friends-list\">\r\n            <Typography variant=\"h6\" sx={{ p: 2 }}>\r\n              Friends\r\n            </Typography>\r\n            {friends.length === 0 ? (\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ p: 2 }}>\r\n                No friends yet\r\n              </Typography>\r\n            ) : (\r\n              friends.map((friend) => (\r\n                <ListItem\r\n                  key={friend._id}\r\n                  className={`chat-friend-item ${selectedFriend?._id === friend._id ? 'active' : ''}`}\r\n                  onClick={() => setSelectedFriend(friend)}\r\n                >\r\n                  <Avatar className=\"chat-friend-avatar\">\r\n                    {friend.name.charAt(0)}\r\n                  </Avatar>\r\n                  <Box className=\"chat-friend-info\">\r\n                    <Typography className=\"chat-friend-name\">\r\n                      {friend.name}\r\n                    </Typography>\r\n                    <Typography className=\"chat-friend-id\">\r\n                      ID: {friend.userId}\r\n                    </Typography>\r\n                  </Box>\r\n                </ListItem>\r\n              ))\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Drawer>\r\n\r\n      <Box className=\"chat-main\">\r\n        {selectedFriend ? (\r\n          <>\r\n            <Box className=\"chat-header\">\r\n              <Typography className=\"chat-header-title\">\r\n                {selectedFriend.name} (ID: {selectedFriend.userId})\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box className=\"chat-messages\">\r\n              {messages.map((message, index) => (\r\n                <Box\r\n                  key={index}\r\n                  className={`chat-message ${\r\n                    message.senderId === user.userId ? 'chat-message-sent' : 'chat-message-received'\r\n                  }`}\r\n                >\r\n                  {message.type === 'code' ? (\r\n                    <Box className=\"chat-code-snippet\">\r\n                      <SyntaxHighlighter\r\n                        language={message.language}\r\n                        style={vscDarkPlus}\r\n                        customStyle={{ margin: 0 }}\r\n                      >\r\n                        {message.message}\r\n                      </SyntaxHighlighter>\r\n                    </Box>\r\n                  ) : (\r\n                    <Typography>{message.message}</Typography>\r\n                  )}\r\n                  <Typography className=\"chat-message-time\">\r\n                    {new Date(message.timestamp).toLocaleTimeString()}\r\n                  </Typography>\r\n                </Box>\r\n              ))}\r\n              {typing && (\r\n                <Typography className=\"chat-typing\">\r\n                  {selectedFriend.name} is typing...\r\n                </Typography>\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </Box>\r\n\r\n            <Box className=\"chat-input\">\r\n              <IconButton onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\r\n                <EmojiIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => setShowCodeDialog(true)}>\r\n                <CodeIcon />\r\n              </IconButton>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Type a message\"\r\n                value={newMessage}\r\n                onChange={(e) => {\r\n                  setNewMessage(e.target.value);\r\n                  handleTyping();\r\n                }}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    handleSendMessage();\r\n                  }\r\n                }}\r\n                className=\"chat-input-field\"\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={handleSendMessage}\r\n                disabled={!newMessage.trim()}\r\n              >\r\n                <SendIcon />\r\n              </IconButton>\r\n            </Box>\r\n\r\n            {showEmojiPicker && (\r\n              <Box className=\"chat-emoji-picker\">\r\n                <EmojiPicker onEmojiClick={handleEmojiClick} />\r\n              </Box>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Box className=\"chat-empty-state\">\r\n            <ChatIcon className=\"chat-empty-state-icon\" />\r\n            <Typography className=\"chat-empty-state-text\">\r\n              Select a friend to start chatting\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      <Dialog\r\n        open={showCodeDialog}\r\n        onClose={() => setShowCodeDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        className=\"chat-code-dialog\"\r\n      >\r\n        <DialogTitle>Send Code Snippet</DialogTitle>\r\n        <DialogContent className=\"chat-code-dialog-content\">\r\n          <FormControl fullWidth className=\"chat-code-language-select\">\r\n            <InputLabel id=\"language-select-label\">Language</InputLabel>\r\n            <Select\r\n              labelId=\"language-select-label\"\r\n              value={codeLanguage}\r\n              label=\"Language\"\r\n              onChange={(e) => setCodeLanguage(e.target.value)}\r\n            >\r\n              <MenuItem value=\"javascript\">JavaScript</MenuItem>\r\n              <MenuItem value=\"python\">Python</MenuItem>\r\n              <MenuItem value=\"java\">Java</MenuItem>\r\n              <MenuItem value=\"cpp\">C++</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={10}\r\n            label=\"Code\"\r\n            value={codeSnippet}\r\n            onChange={(e) => setCodeSnippet(e.target.value)}\r\n            className=\"chat-code-textarea\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className=\"chat-code-dialog-actions\">\r\n          <Button onClick={() => setShowCodeDialog(false)}>Cancel</Button>\r\n          <Button\r\n            onClick={handleSendCode}\r\n            variant=\"contained\"\r\n            disabled={!codeSnippet.trim()}\r\n          >\r\n            Send\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}